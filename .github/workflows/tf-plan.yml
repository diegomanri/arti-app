name: Terraform Plan

on:
  #   pull_request:
  #     branches:
  #       - main
  workflow_dispatch:

jobs:
  plan:
    runs-on: ubuntu-latest
    environment: production

    env:
      # Any environment variables prefixed with TF_VAR_ are automatically read as Terraform variables.
      TF_VAR_ghcr_token: ${{ secrets.GHCR_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform 1.5
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5

      # Ensure the repository has the variables below in place
      # TODO, make sure env.TF_STATE_S3_BUCKET is the right way to reference the variable
      # perhaps is with vars.VARIABLE_NAME
      # https://docs.github.com/en/actions/learn-github-actions/variables#using-the-vars-context-to-access-configuration-variable-values
      - name: Terraform Init
        run: |
          terraform -chdir=terraform init \
            -backend-config="bucket=${{ vars.TF_STATE_S3_BUCKET }}" \
            -backend-config="dynamodb_table=${{ vars.TF_STATE_DYNAMODB_TABLE }}" \
            -backend-config="region=us-east-1" \
            -backend-config="encrypt=true" \
            -backend-config="key=state/production/terraform.tfstate"

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=terraform plan -input=false
        #continue-on-error: true

        # Output the standard output, error output, and exit code of the Terraform plan step
      - run: echo ${{ steps.plan.outputs.stdout }}
        continue-on-error: true
      - run: echo ${{ steps.plan.outputs.stderr }}
        continue-on-error: true
      - run: echo ${{ steps.plan.outputs.exitcode }}
        continue-on-error: true
